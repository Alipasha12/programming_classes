{
  "openapi": "3.0.0",
  "info": {
    "title": "Ecommerce Fake API",
    "version": "1.0.0",
    "description": "Fake API for managing users and Products. For support contact us at be1newinner@gmail.com",
    "contact": {
      "name": "API Support",
      "email": "be1newinner@gmail.com"
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "curl": {
                  "summary": "cURL example",
                  "value": "curl -X POST http://localhost:3000/users/login \\  -H 'Content-Type: application/json' \\  -d '{\"username\":\"john_doe\", \"password\":\"password123\"}'"
                },
                "fetch": {
                  "summary": "Fetch API example",
                  "value": "fetch('http://localhost:3000/users/login', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    username: 'john_doe',\n    password: 'password123'\n  })\n})\n.then(response => response.json())\n.then(data => console.log(data))\n.catch(error => console.error('Error:', error));"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify": {
      "post": {
        "summary": "Verify a user's token",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired verification token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of products per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{sku}": {
      "get": {
        "summary": "Get a product by SKU",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "SKU of the product to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "john.doe@example.com"
          },
          "fullname": {
            "type": "string",
            "description": "Full name",
            "example": "John Doe"
          },
          "phone": {
            "type": "integer",
            "description": "Phone number",
            "example": 1234567890
          },
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": ["username", "password", "email"]
      },
      "RegisterUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "john.doe@example.com"
          }
        },
        "required": ["username", "password", "email"]
      },
      "RegisterUserResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": ""
          },
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "password": {
            "type": "string",
            "description": "Password",
            "example": "password123"
          }
        },
        "required": ["username", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": ""
          },
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Verification token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": ["token"]
      },
      "VerifyResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": ""
          },
          "message": {
            "type": "string",
            "description": "Verification message",
            "example": "Token verified successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid credentials"
          },
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": ""
          },
          "user": {
            "type": "string",
            "description": "User data",
            "example": ""
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Stock Keeping Unit",
            "example": "ABC123"
          },
          "name": {
            "type": "string",
            "description": "Product name",
            "example": "Wireless Mouse"
          },
          "description": {
            "type": "string",
            "description": "Product description",
            "example": "A high-quality wireless mouse"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "Product price",
            "example": 29.99
          },
          "stock": {
            "type": "integer",
            "description": "Stock quantity",
            "example": 100
          },
          "category": {
            "type": "string",
            "description": "Product category",
            "example": "Electronics"
          }
        },
        "required": ["sku", "name", "price", "stock"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://fake-api1.vercel.app/api",
      "description": "Live server"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    }
  ]
}
